<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright (c) 2011. Purple Door Systems, BV.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:device="http://www.springframework.org/schema/mobile/device"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/mobile/device
	http://www.springframework.org/schema/mobile/device/spring-mobile-device-1.0.xsd">

    <!-- Configures the Tiles layout system -->
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
        <property name="checkRefresh" value="true"/>
        <property name="completeAutoload" value="false"/>
        <property name="definitions">
            <list>
                <!-- Scan views directory for Tiles configurations -->
                <value>/WEB-INF/jsp/**/views.xml</value>
            </list>
        </property>
        <!-- resolving preparer names as Spring bean definition names -->
        <property name="preparerFactoryClass"
                  value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
    </bean>

    <!--
         Resolves logical view names returned by Controllers to Tiles; a view
         name to resolve is treated as the name of a tiles definition
     -->
    <bean class="org.springframework.js.ajax.AjaxUrlBasedViewResolver" id="tilesViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
        <property name="requestContextAttribute" value="rc"/>
    </bean>

</beans>
