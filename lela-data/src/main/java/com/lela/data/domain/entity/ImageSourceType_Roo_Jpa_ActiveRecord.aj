// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lela.data.domain.entity;

import com.lela.data.domain.entity.ImageSourceType;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ImageSourceType_Roo_Jpa_ActiveRecord {
    
    public static long ImageSourceType.countImageSourceTypes() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ImageSourceType o", Long.class).getSingleResult();
    }
    
    public static List<ImageSourceType> ImageSourceType.findAllImageSourceTypes() {
        return entityManager().createQuery("SELECT o FROM ImageSourceType o", ImageSourceType.class).getResultList();
    }
    
    public static ImageSourceType ImageSourceType.findImageSourceType(Long id) {
        if (id == null) return null;
        return entityManager().find(ImageSourceType.class, id);
    }
    
    public static List<ImageSourceType> ImageSourceType.findImageSourceTypeEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ImageSourceType o", ImageSourceType.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public ImageSourceType ImageSourceType.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ImageSourceType merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
