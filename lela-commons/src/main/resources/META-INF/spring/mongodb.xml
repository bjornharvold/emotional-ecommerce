<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2011. Purple Door Systems, BV.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c"  
       xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		   ">

    <!-- Default bean name is 'mongo' -->
    <mongo:mongo id="mongo"
                 host="#{serviceProperties['mongodb-lela.hostname']}"
                 port="#{serviceProperties['mongodb-lela.port']}"
                 replica-set="#{serviceProperties['mongodb-lela.replicaset']}">
        <!--<mongo:options-->
                <!--connections-per-host="${mongo.connectionsPerHost}"-->
                <!--threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"-->
                <!--connect-timeout="${mongo.connectTimeout}"-->
                <!--max-wait-time="${mongo.maxWaitTime}"-->
                <!--auto-connect-retry="${mongo.autoConnectRetry}"-->
                <!--socket-keep-alive="${mongo.socketKeepAlive}"-->
                <!--socket-timeout="${mongo.socketTimeout}"-->
                <!--slave-ok="${mongo.slaveOk}"-->
                <!--write-number="1"-->
                <!--write-timeout="0"-->
                <!--write-fsync="true"/>-->
    </mongo:mongo>

    <mongo:db-factory id="mongoDbFactory"
                      mongo-ref="mongo"
                      dbname="#{serviceProperties['mongodb-lela.db']}"
                      username="#{serviceProperties['mongodb-lela.username']}"
                      password="#{serviceProperties['mongodb-lela.password']}"/>

    <!-- by default look for a Mongo object named 'mongo' - default name used for the converter is 'mappingConverter' -->
    <mongo:mapping-converter base-package="com.lela.domain.document" id="mappingConverter"/>

    <mongo:repositories base-package="com.lela.commons.repository"/>

    <!--<mongo:mapping-converter base-package="com.lela" id="mappingConverter">-->
    <!--<mongo:custom-converters>-->
    <!--<mongo:converter ref="readConverter"/>-->
    <!--<mongo:converter>-->
    <!--<bean class="org.springframework.data.document.mongodb.PersonWriteConverter"/>-->
    <!--</mongo:converter>-->
    <!--</mongo:custom-converters>-->
    <!--</mongo:mapping-converter>-->

    <!--<bean id="readConverter" class="org.springframework.data.document.mongodb.PersonReadConverter"/>-->

    <!-- set the mapping converter to be used by the MongoTemplate -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mongoConverter" ref="mappingConverter"/>
        <!-- <property name="writeConcern" value="SAFE"/> -->
    </bean>

    <!-- use to trace object life cycle -->
    <!--<bean class="org.springframework.data.mongodb.core.mapping.event.LoggingEventListener"/>-->

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- event listener that sets and updates creation and update dates -->
    <bean class="com.lela.commons.spring.data.DateCreatorMongoEventListener"/>
    
    <bean class="com.lela.commons.spring.data.UserMongoEventListener">
        <constructor-arg index="0" ref="stringEncryptor"/>
    </bean>

    <bean id="connectionMetrics" class="org.springframework.data.mongodb.monitor.ConnectionMetrics" >
        <constructor-arg name="mongo" ref="mongo"/>
    </bean>
    
    
    <beans profile="default">
        <util:properties id="serviceProperties">
            <prop key="mongodb-lela.db">${mongodb-lela.db}</prop>
            <prop key="mongodb-lela.hostname">${mongodb-lela.host}</prop>
            <prop key="mongodb-lela.port">${mongodb-lela.port}</prop>
            <prop key="mongodb-lela.username">${mongodb-lela.username}</prop>
            <prop key="mongodb-lela.password">${mongodb-lela.password}</prop>
            <prop key="mongodb-lela.replicaset">${mongodb-lela.replicaset}</prop>
        </util:properties>
    </beans>

    <!-- for deployment to cloud foundry -->
    <!--
    <beans profile="cloud">
        <cloud:service-properties id="serviceProperties"/>
    </beans>
    -->
    
</beans>